// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id          String        @id @unique
  name        String
  isGuest     Boolean       @default(false)
  joinedAt    DateTime      @default(now())
  ChessGame   ChessGame?    @relation(fields: [chessGameId], references: [id])
  chessGameId String?
  chessMove   ChessMove[]
  chessResult ChessResult[]
}

model ChessGame {
  id String @id @unique

  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now())
  status       GameStatus
  moves        ChessMove[]
  players      Player[]
  result       ChessResult?
  currentBoard String
  turn         String

  whitePlayerRemainingTime Int
  blackPlayerRemainingTime Int
}

model ChessMove {
  id        String    @id @default(cuid())
  game      ChessGame @relation(fields: [gameId], references: [id])
  gameId    String
  player    Player    @relation(fields: [playerId], references: [id])
  playerId  String
  move      String
  createdAt DateTime  @default(now())
}

model ChessResult {
  id         String         @id @default(cuid())
  game       ChessGame      @relation(fields: [gameId], references: [id])
  gameId     String         @unique
  winner     Player?        @relation(fields: [winnerId], references: [id])
  winnerId   String?
  resultType GameResultType
  finishedAt DateTime       @default(now())
}

enum GameStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}

enum GameResultType {
  WIN
  DRAW
  RESIGNATION
  TIMEOUT
}
